harnessApiVersion: '1.0'
type: BASIC
concurrencyStrategy: INFRA
description: Parametrized workflow that takes care of Infra and Service deployment
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: ECS
  daemonSet: false
  name: Phase 1
  phaseSteps:
  - type: CONTAINER_SETUP
    name: Set up Container
    steps:
    - type: CLOUD_FORMATION_CREATE_STACK
      name: Newsinglestack_forked
      properties:
        addTags: true
        awsConfigId: GOoviLqiStq0VZbhcdGWxw
        backendConfigs: null
        customStackName: Harness-${serviceVariable.DDAppCI}-${service.name}-Infra-${workflow.variables.AlbClusterName}
        provisionerName: singlestack
        region: ${workflow.variables.Region}
        tags: |-
          [{
           "key":"ApplicationCI",
           "value":"${serviceVariable.DDAppCI}"
          }]
        templateExpressions:
        - expression: ${Aws_CloudProvider}
          fieldName: awsConfigId
          metadata:
            entityType: CF_AWS_CONFIG_ID
            relatedField: ''
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 900000
        useCustomStackName: true
        variables:
        - name: RecordName
          value: ${service.name}-${workflow.variables.Region.split('-')[1].toLowerCase()}${workflow.variables.Region.split('-')[2].toLowerCase()}
          valueType: TEXT
        - name: RiskDataClass
          value: ${app.defaults.RiskDataClass}
          valueType: TEXT
        - name: HealthCheckPath
          value: ${app.defaults.HealthCheckPath}
          valueType: TEXT
        - name: VPC
          value: ${workflow.variables.VPC}
          valueType: TEXT
        - name: APPNAME
          value: ${service.name}
          valueType: TEXT
        - name: LoadBalancerPort
          value: ${app.defaults.ESPort}
          valueType: TEXT
        - name: NodeInstanceRole
          value: ${environmentVariable.NodeInstanceRole}
          valueType: TEXT
        - name: LoadBalancerPriority
          value: ${serviceVariable.LoadbalancerPriority}
          valueType: TEXT
        - name: ApplicationContactDL
          value: ${app.defaults.ApplicationContactDL}
          valueType: TEXT
        - name: APPContainerPort
          value: ${app.defaults.AppContainerPort}
          valueType: TEXT
        - name: HostedZoneName
          value: ${service.name}-east1.dev.${serviceVariable.DDAppCI}.aws.ual.com
          valueType: TEXT
        - name: HostedZoneId
          value: ${environmentVariable.HostedZoneID}
          valueType: TEXT
        - name: GSLBURL
          value: ${service.name}.dev.${serviceVariable.DDAppCI}.aws.ual.com
          valueType: TEXT
        - name: AlbName
          value: ${workflow.variables.AlbClusterName}
          valueType: TEXT
        - name: NewClusterAlb
          value: ${workflow.variables.NewClusterAlb}
          valueType: TEXT
        - name: DataRetentionPeriod
          value: 6 months
          valueType: TEXT
        - name: UpperCaseClusterAppCI
          value: ${app.defaults.ApplicationCIUpper}
          valueType: TEXT
        - name: Subnets
          value: ${workflow.variables.Subnets}
          valueType: TEXT
        - name: NewPolicyRole
          value: ${workflow.variables.NewPolicyRole}
          valueType: TEXT
        - name: ECSClusterName
          value: ${workflow.variables.AlbClusterName}
          valueType: TEXT
        - name: SLALevel
          value: Tier 1
          valueType: TEXT
        - name: Environment
          value: ${env.name}
          valueType: TEXT
        - name: DataClassification
          value: PII
          valueType: TEXT
        - name: ClusterAppCI
          value: ${app.defaults.ApplicationCI}
          valueType: TEXT
        - name: MaintenanceWindow
          value: Sun:04:00-Sun:04:30
          valueType: TEXT
        - name: RegulatoryControls
          value: GDPR
          valueType: TEXT
        - name: InternalExternal
          value: Internal
          valueType: TEXT
        - name: CertificateArn
          value: ${workflow.variables.Cert}
          valueType: TEXT
    - type: ECS_SERVICE_SETUP
      name: ECS Service Setup
      properties:
        awsAutoScalarConfigs:
        - scalableTargetJson: |-
            {
                "ServiceNamespace": "ecs",
                "ResourceId": "service/${serviceVariable.ApplicationCI}-${service.name}-${env.name}/${serviceVariable.ApplicationCI}-${service.name}-${env.name}-service",
                "ScalableDimension": "ecs:service:DesiredCount",
                "MinCapacity": ${serviceVariable.MinCapacity},
                "MaxCapacity": ${serviceVariable.MaxCapacity}
            }
          scalingPolicyForTarget: |-
            {
                "PolicyName": "${serviceVariable.ApplicationCI}-${service.name}-${env.name}-AGPolicy",
                "PolicyType": "TargetTrackingScaling",
                "ServiceNamespace": "ecs",
              "TargetTrackingScalingPolicyConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
                    },
                    "ScaleInCooldown": 10,
                    "ScaleOutCooldown": 10,
                    "TargetValue": ${serviceVariable.TargetValue}
                }
            }
        desiredInstanceCount: fixedInstances
        ecsServiceName: ${serviceVariable.ApplicationCI}_${service.name}_${env.name}_harness
        fixedInstances: '2'
        loadBalancerName: ${serviceVariable.ApplicationCI}-${workflow.variables.AlbClusterName}-${env.name}-alb
        resizeStrategy: RESIZE_NEW_FIRST
        roleArn: Harness-${env.name}-Role
        serviceSteadyStateTimeout: 10
        targetContainerName: ''
        targetGroupArn: ${serviceVariable.TargetGroupARN}
        targetPort: ''
        templateUuid: null
        templateVariables: null
        templateVersion: null
        title: ECS Service Setup
        useLoadBalancer: true
    - type: SHELL_SCRIPT
      name: Shell Script
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        includeInfraSelectors: true
        outputVars: ''
        publishAsVar: false
        scriptString: |
          echo Target ARN : ${cloudformation.TargetGroupARN}

          echo SvcRole : ${serviceVariable.ApplicationCI}-${env.name}-${workflow.variables.Region}-Role

          echo Record Name : ${service.name}-${workflow.variables.Region.split('-')[1].toLowerCase()}-${workflow.variables.Region.split('-')[2].toLowerCase()}
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    steps:
    - type: ECS_SERVICE_DEPLOY
      name: Upgrade Containers
      properties:
        instanceCount: 100
        instanceUnitType: PERCENTAGE
        templateUuid: null
        templateVariables: null
        templateVersion: null
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_ECS}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
rollbackPhases:
- type: ECS
  daemonSet: false
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: ECS_SERVICE_ROLLBACK
      name: Rollback Containers
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_ECS}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
templateExpressions:
- expression: ${Environment}
  fieldName: envId
  metadata:
  - name: relatedField
    value: ${InfraDefinition_ECS}
  - name: entityType
    value: ENVIRONMENT
- expression: ${Service}
  fieldName: serviceId
  metadata:
  - name: relatedField
  - name: artifactType
    value: DOCKER
  - name: entityType
    value: SERVICE
- expression: ${InfraDefinition_ECS}
  fieldName: infraDefinitionId
  metadata:
  - name: relatedField
  - name: entityType
    value: INFRASTRUCTURE_DEFINITION
templatized: true
userVariables:
- type: ENTITY
  description: Variable for Environment entity
  fixed: false
  mandatory: true
  name: Environment
- type: ENTITY
  description: Variable for Service entity
  fixed: false
  mandatory: true
  name: Service
- type: ENTITY
  description: Variable for Infrastructure Definition entity
  fixed: false
  mandatory: true
  name: InfraDefinition_ECS
- type: ENTITY
  description: Variable for AWS Config entity in Newsinglestack_forked
  fixed: false
  mandatory: true
  name: Aws_CloudProvider
- type: TEXT
  fixed: false
  mandatory: true
  name: AlbClusterName
  value: ecs
- type: TEXT
  allowedValues: us-east-1,us-east-2
  fixed: false
  mandatory: true
  name: Region
- type: TEXT
  allowedValues: true,false
  fixed: false
  mandatory: true
  name: NewClusterAlb
- type: TEXT
  allowedValues: true,false
  fixed: false
  mandatory: true
  name: NewPolicyRole
- type: TEXT
  allowedValues: ${environmentVariable.VPC_useast1},${environmentVariable.VPC_useast2}
  fixed: false
  mandatory: true
  name: VPC
- type: TEXT
  allowedValues: ${environmentVariable.Subnets_useast1},${environmentVariable.Subnets_useast2}
  fixed: false
  mandatory: true
  name: Subnets
- type: TEXT
  allowedValues: ${environmentVariable.Cert_useast1},${environmentVariable.Cert_useast2}
  fixed: false
  mandatory: true
  name: Cert
