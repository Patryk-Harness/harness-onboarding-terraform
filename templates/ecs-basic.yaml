harnessApiVersion: '1.0'
type: BASIC
concurrencyStrategy: INFRA
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: ECS
  daemonSet: false
  name: Phase 1
  phaseSteps:
  - type: CONTAINER_SETUP
    name: Set up Container
    steps:
    - type: ECS_SERVICE_SETUP
      name: ECS Service Setup
      properties:
        awsAutoScalarConfigs:
        - scalableTargetJson: |-
            {
                "ServiceNamespace": "ecs",
                "ResourceId": "service/${serviceVariable.ApplicationCI}-${service.name}-${env.name}/${serviceVariable.ApplicationCI}-${service.name}-${env.name}-service",
                "ScalableDimension": "ecs:service:DesiredCount",
                "MinCapacity": ${serviceVariable.MinCapacity},
                "MaxCapacity": ${serviceVariable.MaxCapacity}
            }
          scalingPolicyForTarget: |-
            {
                "PolicyName": "${serviceVariable.ApplicationCI}-${service.name}-${env.name}-AGPolicy",
                "PolicyType": "TargetTrackingScaling",
                "ServiceNamespace": "ecs",
              "TargetTrackingScalingPolicyConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
                    },
                    "ScaleInCooldown": 10,
                    "ScaleOutCooldown": 10,
                    "TargetValue": ${serviceVariable.TargetValue}
                }
            }
        desiredInstanceCount: fixedInstances
        ecsServiceName: ${serviceVariable.ApplicationCI}_${service.name}_${env.name}_harness
        fixedInstances: '2'
        loadBalancerName: ${serviceVariable.ApplicationCI}-ecs-${env.name}-alb
        resizeStrategy: RESIZE_NEW_FIRST
        roleArn: ${serviceVariable.ApplicationCI}-${service.name}-${env.name}-us-east-1-TaskRole
        serviceSteadyStateTimeout: 10
        targetContainerName: ''
        targetGroupArn: ${serviceVariable.TargetGroupARN}
        targetPort: ''
        templateUuid: null
        templateVariables: null
        templateVersion: null
        title: ECS Service Setup
        useLoadBalancer: true
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    steps:
    - type: ECS_SERVICE_DEPLOY
      name: Upgrade Containers
      properties:
        instanceCount: 100
        instanceUnitType: PERCENTAGE
        templateUuid: null
        templateVariables: null
        templateVersion: null
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_ECS}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
rollbackPhases:
- type: ECS
  daemonSet: false
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: ECS_SERVICE_ROLLBACK
      name: Rollback Containers
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_ECS}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
templateExpressions:
- expression: ${Environment}
  fieldName: envId
  metadata:
  - name: relatedField
    value: ${InfraDefinition_ECS}
  - name: entityType
    value: ENVIRONMENT
- expression: ${Service}
  fieldName: serviceId
  metadata:
  - name: relatedField
  - name: artifactType
    value: DOCKER
  - name: entityType
    value: SERVICE
- expression: ${InfraDefinition_ECS}
  fieldName: infraDefinitionId
  metadata:
  - name: relatedField
  - name: entityType
    value: INFRASTRUCTURE_DEFINITION
templatized: true
userVariables:
- type: ENTITY
  description: Variable for Environment entity
  fixed: false
  mandatory: true
  name: Environment
- type: ENTITY
  description: Variable for Service entity
  fixed: false
  mandatory: true
  name: Service
- type: ENTITY
  description: Variable for Infrastructure Definition entity
  fixed: false
  mandatory: true
  name: InfraDefinition_ECS
